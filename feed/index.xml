<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tclh123's 3rd Blog]]></title>
  <link href="http://tclh123.github.com/feed" rel="self"/>
  <link href="http://tclh123.github.com/"/>
  <updated>2014-01-05T00:54:16+08:00</updated>
  <id>http://tclh123.github.com/</id>
  <author>
    <name><![CDATA[tclh123]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OS X chflags]]></title>
    <link href="http://tclh123.github.com/blog/2014/01/05/os-x-chflags/"/>
    <updated>2014-01-05T00:43:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2014/01/05/os-x-chflags</id>
    <content type="html"><![CDATA[<p>U盘插过机房的机子后被某Windows上的2b病毒影响了，所有文件都被隐藏然后生成对应的 .lnk 的文件（Windows快捷方式）。
今天插OS X上一看，在图形界面下还是被隐藏的（说明文件/FAT32在OS X上挂载后，文件的隐藏属性跟Windows上的都可以上层兼容?）</p>

<p>OS X 实际上是 FreeBSD，Linux上隐藏文件/文件夹都只有取名为<code>.</code>开头的方法，BSD上还有 <code>chflags</code> 这个命令</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CHFLAGS(1)                BSD General Commands Manual               CHFLAGS(1)
</span><span class='line'>
</span><span class='line'>NAME
</span><span class='line'>     chflags -- change file flags
</span><span class='line'>
</span><span class='line'>SYNOPSIS
</span><span class='line'>     chflags [-fhv] [-R [-H | -L | -P]] flags file ...
</span><span class='line'>
</span><span class='line'>     ...
</span><span class='line'>
</span><span class='line'>     The flags are specified as an octal number or a comma separated list of keywords.  The following keywords are currently defined:
</span><span class='line'>
</span><span class='line'>           arch, archived
</span><span class='line'>                   set the archived flag (super-user only)
</span><span class='line'>
</span><span class='line'>           opaque  set the opaque flag (owner or super-user only).  [Directory is opaque when viewed through a union mount]
</span><span class='line'>
</span><span class='line'>           nodump  set the nodump flag (owner or super-user only)
</span><span class='line'>
</span><span class='line'>           sappnd, sappend
</span><span class='line'>                   set the system append-only flag (super-user only)
</span><span class='line'>
</span><span class='line'>           schg, schange, simmutable
</span><span class='line'>                   set the system immutable flag (super-user only)
</span><span class='line'>
</span><span class='line'>           uappnd, uappend
</span><span class='line'>                   set the user append-only flag (owner or super-user only)
</span><span class='line'>
</span><span class='line'>           uchg, uchange, uimmutable
</span><span class='line'>                   set the user immutable flag (owner or super-user only)
</span><span class='line'>
</span><span class='line'>           hidden  set the hidden flag [Hide item from GUI]</span></code></pre></td></tr></table></div></figure>


<p>flag 前面加 <code>no</code> 就是相反的意思,
所以,</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chflags nohidden *</span></code></pre></td></tr></table></div></figure>


<p>就行了.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Open Source &amp; Cross-platform UML Tools]]></title>
    <link href="http://tclh123.github.com/blog/2013/12/30/open-source-and-cross-platform-uml-tools/"/>
    <updated>2013-12-30T12:47:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/12/30/open-source-and-cross-platform-uml-tools</id>
    <content type="html"><![CDATA[<p>呵呵，都到大四了还逃不过么。。依然有门神奇的课需要画一堆UML diagram。。
Well&#8230;至少我是不会去用那些 Windows Only 神奇的所谓企业级的软件的。。（真不知道学校都什么心态啊，你种你教学生的时候别用盗版啊</p>

<ul>
<li><p>http://www.genmymodel.com/</p>

<p>  在线的，略吊，但是目前支持的图有点少，不过大多时候能画类图也就够了</p></li>
<li><p>http://argouml.tigris.org/</p>

<p>  ArgoUML</p></li>
<li><p>http://www.umlet.com/changes.htm</p>

<p>  UMLet</p></li>
<li><p>http://www.astah.net/editions/community</p>

<p>  Astah Community，这个推荐的人还蛮多</p></li>
<li><p>https://github.com/amolenaar/gaphor</p>

<p>  用我大python写的</p></li>
<li><p>https://github.com/ObeoNetwork/UML-Modeling</p>

<p>  OpenSource (EPL licensed) UML2 Graphical Modelers (Class, Composite, State, Activity, Sequence &#8230;)
  这个应该是我找到的功能最全的，界面是继承 Eclipse 的貌似</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trouble with OS X python pkgs]]></title>
    <link href="http://tclh123.github.com/blog/2013/12/30/trouble-with-os-x-python-pkgs/"/>
    <updated>2013-12-30T12:26:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/12/30/trouble-with-os-x-python-pkgs</id>
    <content type="html"><![CDATA[<h2>起因</h2>

<p>安装 https://github.com/amolenaar/gaphor 的时候总报 <code>ImportError: No module named pygtk</code>,
而我的 pygtk 是 homebrew 装的，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew info pygtk
</span><span class='line'>pygtk: stable 2.24.0
</span><span class='line'>http://www.pygtk.org/
</span><span class='line'>/usr/local/Cellar/pygtk/2.24.0 (658 files, 18M) *
</span><span class='line'>  Built from source
</span><span class='line'>From: https://github.com/Homebrew/homebrew/commits/master/Library/Formula/pygtk.rb
</span><span class='line'>==&gt; Dependencies
</span><span class='line'>Build: pkg-config ✔
</span><span class='line'>Required: glib ✔, gtk+ ✔, atk ✔, pygobject ✔, py2cairo ✔
</span><span class='line'>==&gt; Options
</span><span class='line'>--glade
</span><span class='line'>    Python bindigs for glade. (to `import gtk.glade`)
</span><span class='line'>--universal
</span><span class='line'>    Build a universal binary
</span><span class='line'>==&gt; Caveats
</span><span class='line'>For non-homebrew python (2.x), you need to amend your PYTHONPATH like so:
</span><span class='line'>  export PYTHONPATH=/usr/local/lib/python2.7/site-packages:$PYTHONPATH</span></code></pre></td></tr></table></div></figure>


<p>（出问题后看pygtk有几个依赖是叉，还重装过一次）</p>

<p><code>python -c "import pygtk"</code> 是 ok 的。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ echo $PYTHONPATH
</span><span class='line'>/usr/local/lib/python2.7/site-packages:
</span><span class='line'>
</span><span class='line'>$ python -c "import sys, pprint; pprint.pprint(sys.path)"
</span><span class='line'>['',
</span><span class='line'> '/Library/Python/2.7/site-packages/MySQL_python-1.2.3-py2.7-macosx-10.8-intel.egg',
</span><span class='line'> '/Library/Python/2.7/site-packages/pip-1.1-py2.7.egg',
</span><span class='line'> '/Library/Python/2.7/site-packages/distribute-0.6.49-py2.7.egg',
</span><span class='line'> '/Users/tclh123/Programming/douban/PyDoubanFM/src/douban-client',
</span><span class='line'> '/usr/local/lib/python2.7/site-packages',
</span><span class='line'> '/Users/tclh123/Dev/UML_Tools/gaphor-gaphor-0.17.2',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python27.zip',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/PyObjC',
</span><span class='line'> '/Library/Python/2.7/site-packages',
</span><span class='line'> '/Library/Python/2.7/site-packages/setuptools-0.6c11-py2.7.egg-info',
</span><span class='line'> '/usr/local/lib/python2.7/site-packages/gtk-2.0']
</span></code></pre></td></tr></table></div></figure>


<p><code>sys.path</code>中是包含 &#8216;/usr/local/lib/python2.7/site-packages&#8217; 的，homebrew 装的 pygtk 在这里面。</p>

<p>但是在 <code>cd gaphor-gaphor-0.17.2 &amp;&amp; pip install .</code> 的时候，输出 <code>sys.path</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>['/private/tmp/pip-RS454x-build/setuptools_git-1.0-py2.7.egg',
</span><span class='line'> '/private/tmp/pip-RS454x-build/nose-1.3.0-py2.7.egg',
</span><span class='line'> '.',
</span><span class='line'> '',
</span><span class='line'> '/Library/Python/2.7/site-packages/MySQL_python-1.2.3-py2.7-macosx-10.8-intel.egg',
</span><span class='line'> '/Library/Python/2.7/site-packages/pip-1.1-py2.7.egg',
</span><span class='line'> '/Library/Python/2.7/site-packages/distribute-0.6.49-py2.7.egg',
</span><span class='line'> '/Users/tclh123/Programming/douban/PyDoubanFM/src/douban-client',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python27.zip',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload',
</span><span class='line'> '/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/PyObjC',
</span><span class='line'> '/Library/Python/2.7/site-packages',
</span><span class='line'> '/Library/Python/2.7/site-packages/setuptools-0.6c11-py2.7.egg-info']</span></code></pre></td></tr></table></div></figure>


<p>却不包含 &#8216;/usr/local/lib/python2.7/site-packages&#8217; 了。。为何</p>

<p>https://github.com/Homebrew/homebrew/issues/10908
这个 issue 是关于 Meld 的，依然没发现什么有帮助的信息么..</p>

<h2>python 在 OS X 下的 site-packages 目录</h2>

<p>在我机子上分散在下列地方，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/  # 这个应该是系统自带python默认的地方?
</span><span class='line'>/Library/Python/2.7/site-packages/  # 大部分pip装的似乎都到这里了
</span><span class='line'>/usr/local/lib/python2.7/site-packages/  # homebrew 装的地方</span></code></pre></td></tr></table></div></figure>


<p>问题还没搞清楚
<strong>To be continued</strong></p>

<h2>easy_install on OS X</h2>

<p>还有，我搞不清楚现在我 easy_install 装的东西是否 work 了，以及装的地方在哪里？</p>

<p>http://lukehagan.com/journal/2010-11-21-easy_install/</p>

<p>似乎依然不 work 迷茫中</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[use haskell on OS X]]></title>
    <link href="http://tclh123.github.com/blog/2013/12/17/use-haskell-on-os-x/"/>
    <updated>2013-12-17T14:54:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/12/17/use-haskell-on-os-x</id>
    <content type="html"><![CDATA[<p>现在不用一个个装 GHC、Cabal 什么的了，直接装 <a href="http://www.haskell.org/platform/mac.html">Haskell Platform</a>.</p>

<p>装完1.2G&#8230;略忧伤</p>

<p>下面抄一下介绍..</p>

<h2>Haskell Platform for Mac OS X</h2>

<p>Welcome to Haskell Platform. The platform consists of the Glasgow Haskell Compiler (GHC) and an extensive set of standard libraries and utilities with full documentation.</p>

<h3>Documentation</h3>

<ul>
<li>Libraries
  Documentation for the libraries that come with Haskell Platform &amp; GHC.</li>
<li>GHC
  The GHC User&#8217;s Guide has all you need to know about using GHC: command line options, language extensions, GHCi, etc.</li>
<li>GHC API
  Documentation for the GHC API.</li>
<li>Cabal
  An infrastructure for building and distributing Haskell software.</li>
<li>Haddock
  A tool for automatically generating documentation from annotated Haskell source code.</li>
</ul>


<h3>What is Installed</h3>

<p>On Mac OS X, the Haskell Platform is installed in two major pieces: GHC and Haskell Platform. They are installed respectively in:</p>

<pre><code>/Library/Frameworks/GHC.framework
/Library/Haskell
</code></pre>

<p>Executables are symlinked in /usr/bin and should be available in any shell.</p>

<h3>Uninstallation</h3>

<p>This and prior versions of GHC and Haskell Platform can be found and then easily removed with the uninstallation command line utility:</p>

<pre><code>/Library/Haskell/bin/uninstall-hs
</code></pre>

<p>Simply run it for more information.</p>

<h3>Configuring Cabal</h3>

<p>The cabal command manages the building and installation of packages, both your own, and those it can fetch from the Hackage repository.
The first time you run cabal, a Mac specific configuration is written into the ~/.cabal directory.</p>

<ul>
<li>If this is the first time you have ever run cabal, it will be made your active configuration.</li>
<li>If you have run cabal in the past, the new settings are in the file config.platform. You might want to review and incorporate some of the settings into your existing config file, or just replace your config file with it entirely.</li>
</ul>


<p>The configuration sets up cabal to install packages with the same layout as those installed with the Platform. Packages installed per user (&#8211;user, the default) are placed in a parallel tree in ~/Library/Haskell.</p>

<p>N.B. Built executables will be symlink&#8217;d into ~/Library/Haskell/bin, you probably want to add that to your $PATH by adding this line to your ~/.bash_profile:</p>

<pre><code>export PATH="$HOME/Library/Haskell/bin:$PATH"
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[upgrade ack on ubuntu]]></title>
    <link href="http://tclh123.github.com/blog/2013/12/16/upgrade-ack-on-ubuntu/"/>
    <updated>2013-12-16T23:38:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/12/16/upgrade-ack-on-ubuntu</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir ~/dpkgs
</span><span class='line'>cd ~/dpkgs
</span><span class='line'>
</span><span class='line'>wget http://packages.debian.org/sid/all/libfile-next-perl/download
</span><span class='line'>wget http://packages.debian.org/sid/all/ack-grep/download
</span><span class='line'>sudo dpkg -i libfile-next-perl_1.12-1_all.deb
</span><span class='line'>sudo dpkg -i ack-grep_2.12-1_all.deb</span></code></pre></td></tr></table></div></figure>


<h2>Reference</h2>

<ul>
<li>http://stackoverflow.com/questions/7765813/ignoring-sub-directories-in-ackrc#answer-8012284</li>
<li>http://askubuntu.com/questions/355668/how-to-install-ack-grep-2-0-with-apt-get</li>
<li>http://askubuntu.com/questions/40779/how-to-install-a-deb-file-via-the-command-line</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim saving of files as sudo]]></title>
    <link href="http://tclh123.github.com/blog/2013/12/15/vim-saving-of-files-as-sudo/"/>
    <updated>2013-12-15T22:40:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/12/15/vim-saving-of-files-as-sudo</id>
    <content type="html"><![CDATA[<h2>Understanding <code>:w !sudo tee %</code></h2>

<p><strong>Following is copied from Andrew Marshall&#8217;s answer on <a href="http://stackoverflow.com/questions/2600783/how-does-the-vim-write-with-sudo-trick-work/7078429#7078429">StackOverflow</a>.</strong></p>

<h3>% means &#8220;the current file&#8221;</h3>

<p>As eugene y pointed out, % does indeed mean &#8220;the current file name&#8221;. Another use for this in Vim is in substitution commands. For example, :%s/foo/bar means &#8220;in the current file, replace occurrences of foo with bar.&#8221; If you highlight some text before typing :s, you&#8217;ll see that the highlighted lines take the place of % as your substitution range.</p>

<h3>:w isn&#8217;t updating your file</h3>

<p>One confusing part of this trick is that you might think :w is modifying your file, but it isn&#8217;t. If you opened and modified file1.txt, then ran :w file2.txt, it would be a &#8220;save as&#8221;; file1.txt wouldn&#8217;t be modified, but the current buffer contents would be sent to file2.txt.</p>

<p>Instead of file2.txt, you can substitute a shell command to receive the buffer contents. For instance, :w !cat will just display the contents.</p>

<p>If Vim wasn&#8217;t run with sudo access, its :w can&#8217;t modify a protected file, but if it passes the buffer contents to the shell, a command in the shell can be run with sudo. In this case, we use tee.</p>

<h3>Understanding tee</h3>

<p>As for tee, picture the tee command as a T-shaped pipe in a normal bash piping situation: it directs output to specified file(s) and also sends it to standard output, which can be captured by the next piped command.</p>

<p>For example, in ps -ax | tee processes.txt | grep &#8216;foo&#8217;, the list of processes will be written to a text file and passed along to grep.</p>

<pre><code> +-----------+    tee     +------------+
 |           |  --------  |            |
 | ps -ax    |  --------  | grep 'foo' |
 |           |     ||     |            |
 +-----------+     ||     +------------+
                   ||   
           +---------------+
           |               |
           | processes.txt |
           |               |
           +---------------+
</code></pre>

<p>(Diagram created with Asciiflow.)</p>

<p>See the tee man page for more info.</p>

<h3>Tee as a hack</h3>

<p>In the situation your question describes, using tee is a hack because we&#8217;re ignoring half of what it does. sudo tee writes to our file and also sends the buffer contents to standard output, but we ignore standard output. We don&#8217;t need to pass anything to another piped command in this case; we&#8217;re just using tee as an alternate way of writing a file and so that we can call it with sudo.</p>

<h3>Making this trick easy</h3>

<p>You can add this to your .vimrc to make this trick easy-to-use: just type :w!!.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>" Allow saving of files as sudo when I forgot to start vim using sudo.
</span><span class='line'>cmap w!! w !sudo tee &gt; /dev/null %
</span><span class='line'>The &gt; /dev/null part explicitly throws away the standard output, since, as I said, we don't need to pass anything to another piped command.</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tmux lose colorscheme]]></title>
    <link href="http://tclh123.github.com/blog/2013/11/26/tmux-lose-colorscheme/"/>
    <updated>2013-11-26T11:19:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/11/26/tmux-lose-colorscheme</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>alias tmux="TERM=screen-256color-bce tmux"</span></code></pre></td></tr></table></div></figure>


<p>And set up the default-terminal option in <code>~/.tmux.conf</code>,</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set -g default-terminal "screen-256color"
</span><span class='line'># set -g default-terminal "xterm"</span></code></pre></td></tr></table></div></figure>


<h2>Reference</h2>

<ul>
<li>http://rhnh.net/2011/08/20/vim-and-tmux-on-osx</li>
<li>http://stackoverflow.com/questions/10158508/lose-vim-colorscheme-in-tmux-mode#comment24005530_10264470</li>
<li>http://blog.longwin.com.tw/2011/04/tmux-learn-screen-config-2011/</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[python string intern]]></title>
    <link href="http://tclh123.github.com/blog/2013/11/23/python-string-intern/"/>
    <updated>2013-11-23T19:44:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/11/23/python-string-intern</id>
    <content type="html"><![CDATA[<p>今天在<code>__builtin__</code>里发现一个<code>intern</code>方法，（原来是internal的意思..
其实 C 里面有个文字常量区，就是说只要是字符串字面量都会存在那里。
才知道Python里不太一样，比如说</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt;&gt;&gt; a = 'a b'
</span><span class='line'>&gt;&gt;&gt; b = 'a b'
</span><span class='line'>&gt;&gt;&gt; a is b
</span><span class='line'>False</span></code></pre></td></tr></table></div></figure>


<p>真相是，python只对由<code>0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz</code>中的字符组成的字符串自动做intern。
因为它们可能会更短&#8230;更像标识符..
另外，在 Python 3 中，似乎被移到<code>sys.intern</code>中去了</p>

<h2>Reference</h2>

<ul>
<li>http://stackoverflow.com/questions/1136826/what-does-python-sys-intern-do-and-when-should-it-be-used/1137293</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[always trust .rvmrc file]]></title>
    <link href="http://tclh123.github.com/blog/2013/11/23/always-trust-rvmrc-file/"/>
    <updated>2013-11-23T19:26:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/11/23/always-trust-rvmrc-file</id>
    <content type="html"><![CDATA[<p>使用Octopress的时候目录里默认存在一个<code>.rvmrc</code>文件，</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm use 1.9.3</span></code></pre></td></tr></table></div></figure>


<p>目测是指定ruby版本用的。每次进入目录都会有<code>Do you wish to trust this .rvmrc file?</code>的提示，需要手动确认。
还是挺烦的&#8230;</p>

<p>其实，<code>rvm list</code> 可以看到我机子上只有这一个版本</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm rubies
</span><span class='line'>
</span><span class='line'>=&gt; ruby-1.9.3-p327 [ x86_64 ]</span></code></pre></td></tr></table></div></figure>


<p>所以这个 <code>.rvmrc</code> 是毫无意义的，可以删掉&#8230;
或者在<code>~/.rvmrc</code>里写入<code>export rvm_trust_rvmrcs_flag=1</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hylang]]></title>
    <link href="http://tclh123.github.com/blog/2013/11/10/hylang/"/>
    <updated>2013-11-10T00:29:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/11/10/hylang</id>
    <content type="html"><![CDATA[<p>发现一个极好玩的项目，hylang，结合 List 跟 python 的写法&#8230;</p>

<blockquote><p>Lisp and Python should love each other. Let&#8217;s make it happen.</p></blockquote>

<p><a href="https://github.com/hylang/hy">https://github.com/hylang/hy</a></p>

<ul>
<li>Code: https://github.com/hylang/hy</li>
<li>Docs: http://hy.rtfd.org/</li>
<li>Quickstart: http://hy.rtfd.org/quickstart</li>
</ul>


<h3>社区</h3>

<p><a href="https://github.com/hylang">https://github.com/hylang</a></p>

<h3>以及由此发现的 python 实现语法词法分析相关的东东</h3>

<ul>
<li><a href="https://github.com/hylang/rply/">https://github.com/hylang/rply/</a></li>
<li><a href="https://github.com/alex/rply">https://github.com/alex/rply</a></li>
<li><a href="https://github.com/dabeaz/ply">https://github.com/dabeaz/ply</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[`python setup.py` install vs. `pip install .`]]></title>
    <link href="http://tclh123.github.com/blog/2013/11/08/%60python-setup-dot-py%60-install-vs-%60pip-install-%60/"/>
    <updated>2013-11-08T00:28:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/11/08/`python-setup-dot-py`-install-vs-`pip-install-`</id>
    <content type="html"><![CDATA[<p>一些坑。</p>

<h3>Distutils</h3>

<p>http://docs.python.org/2/distutils/setupscript.html#installing-package-data</p>

<h3>setuptools &amp; pip</h3>

<p><a href="http://pythonhosted.org/setuptools/setuptools.html#using-find-packages">Building and Distributing Packages with Setuptools</a></p>

<p>https://pypi.python.org/pypi/setuptools/
http://www.pip-installer.org/en/latest/usage.html#pip-install
http://www.pip-installer.org/en/latest/logic.html#git
http://stackoverflow.com/questions/6947988/when-to-use-pip-requirements-file-versus-install-requires-in-setup-py
https://groups.google.com/d/msg/python-virtualenv/1eI6Z9_XRHE/cj6CCHvmS10J
http://stackoverflow.com/questions/2087148/can-i-use-pip-instead-of-easy-install-for-python-setup-py-install-dependen</p>

<h4>requirements.txt</h4>

<p><code>from pip.req import parse_requirements</code></p>

<p>http://stackoverflow.com/questions/14399534/how-can-i-reference-requirements-txt-for-the-install-requires-kwarg-in-setuptool?answertab=votes#answer-16624700</p>

<blockquote><p>Require pip>=1.2, as lower versions have a bug
https://github.com/erikrose/peep/commit/65367f66b777f17b1223569e1cd2f6250a820e99</p></blockquote>

<h4>尽管提供了dependency_lins依然默认安装PyPi版本的坑</h4>

<p>http://stackoverflow.com/questions/17366784/setuptools-unable-to-use-link-from-dependency-links/17442663#17442663
http://www.pip-installer.org/en/latest/logic.html#requirements-file-format</p>

<p><a href="http://www.packtpub.com/article/writing-a-package-in-python">Writing a Package in Python</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pip uninstall editable pkgs]]></title>
    <link href="http://tclh123.github.com/blog/2013/11/06/pip-uninstall-editable-pkgs/"/>
    <updated>2013-11-06T17:32:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/11/06/pip-uninstall-editable-pkgs</id>
    <content type="html"><![CDATA[<p>http://stackoverflow.com/questions/17346619/how-to-uninstall-editable-packages-with-pip-installed-with-e</p>

<p>At {virtualenv}/lib/python2.7/site-packages/</p>

<ul>
<li>remove the egg file (e.g. distribute-0.6.34-py2.7.egg)</li>
<li>from file easy_install.pth, remove the corresponding line (it should be a path to the source directory or of an egg file).</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[setup raspberry pi on OS X]]></title>
    <link href="http://tclh123.github.com/blog/2013/10/04/setup-raspberry-pi-on-os-x/"/>
    <updated>2013-10-04T21:53:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/10/04/setup-raspberry-pi-on-os-x</id>
    <content type="html"><![CDATA[<p>折腾了下树莓派，买了 PL2303串口TTL下载线，跟一个8G C10的TF带SD卡套。</p>

<p>只能串口访问，没买usb无线，没有多余网线。。不能SSH、开VNC。。不幸福</p>

<p>等能联网了再来折腾吧 →_→</p>

<hr />

<h2>setup the SD card</h2>

<ul>
<li>用DiskUtil把sd卡erase成ExFat格式</li>
<li>执行 <code>df -h</code> 来获得sd卡的设备路径</li>
<li>将系统img写入sd卡</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>tclh123@tclh123MBP ~ <span class="nv">$ </span>sudo dd <span class="nv">bs</span><span class="o">=</span>1m <span class="k">if</span><span class="o">=</span><span class="s2">&quot;/path/to/2013-09-25-wheezy-raspbian.img&quot;</span> <span class="nv">of</span><span class="o">=</span>/dev/rdisk2
</span><span class='line'>Password:
</span><span class='line'>2825+0 records in
</span><span class='line'>2825+0 records out
</span><span class='line'>2962227200 bytes transferred in 168.735466 secs <span class="o">(</span>17555451 bytes/sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>And you can use <code>killall -INFO dd</code> to check the status of <code>dd</code> in  progress (<a href="http://www.commandlinefu.com/commands/view/5440/check-the-status-of-dd-in-progress-os-x">link</a>)</p>

<h2>串口通信</h2>

<ul>
<li>下载PL2303串口驱动</li>
</ul>


<p>http://www.prolific.com.tw/US/ShowProduct.aspx?p_id=229&amp;pcid=41
安装完需要重启。。</p>

<ul>
<li>下个minicom</li>
</ul>


<p><code>brew install minicom</code></p>

<p>ps. 我不知道为什么直接用screen连 <code>screen /dev/tty.usbserial 9600</code> 会乱码加卡死。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solve A+B Problem in python &amp; one line]]></title>
    <link href="http://tclh123.github.com/blog/2013/09/25/solve-a-plus-b-problem-in-python-and-one-line/"/>
    <updated>2013-09-25T02:23:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/09/25/solve-a-plus-b-problem-in-python-and-one-line</id>
    <content type="html"><![CDATA[<p>Classical ACM/ICPC Problem</p>

<p>one test case is easy, how to support multi- test cases?</p>

<p>ex.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># Input</span>
</span><span class='line'><span class="mi">1</span> <span class="mi">2</span>
</span><span class='line'><span class="mi">2</span> <span class="mi">4</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Output</span>
</span><span class='line'><span class="mi">3</span>
</span><span class='line'><span class="mi">6</span>
</span></code></pre></td></tr></table></div></figure>


<p>in python 2.x</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">print_function</span><span class="p">;</span> <span class="kn">import</span> <span class="nn">sys</span><span class="p">;</span> <span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">(</span><span class="n">x</span><span class="p">)),</span> <span class="p">[</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">())</span> <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">sys</span><span class="o">.</span><span class="n">stdin</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can test it on the Online Judge. :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[use Pandoc and LaTeX on OS X]]></title>
    <link href="http://tclh123.github.com/blog/2013/09/09/use-pandoc-and-latex-on-os-x/"/>
    <updated>2013-09-09T02:11:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/09/09/use-pandoc-and-latex-on-os-x</id>
    <content type="html"><![CDATA[<h2>Installing</h2>

<ul>
<li><a href="http://code.google.com/p/pandoc/downloads/">Pandoc</a></li>
<li>MacTeX&#8217;s <a href="http://www.tug.org/mactex/morepackages.html">BasicTeX.pkg</a></li>
</ul>


<blockquote><p>For PDF output, you’ll also need LaTeX. We recommend installing BasicTeX (64M), and using the tlmgr tool to install additional packages as needed.</p></blockquote>

<p>Just download and run the pkg files.</p>

<p>Then add <code>/usr/texbin</code> to your $PATH(<code>export PATH=${PATH}:/usr/texbin;</code>).</p>

<p>Now, you get them installed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pandoc --version
</span><span class='line'>
</span><span class='line'>pdflatex -v
</span></code></pre></td></tr></table></div></figure>


<h3>Install tlmgr</h3>

<p><a href="http://www.tug.org/texlive/tlmgr.html">tlmgr - TeX Live package manager</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl http://ftp.ctex.org/mirrors/CTAN/systems/texlive/tlnet/update-tlmgr-latest.sh -O
</span><span class='line'>chmod a+x update-tlmgr-latest.sh
</span><span class='line'>./update-tlmgr-latest.sh
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>My Output</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Verifying archive integrity... All good.
</span><span class='line'>Uncompressing TeX Live Manager Updater...........................................................................................................................................................................................
</span><span class='line'>./runme.sh: updating in /usr/local/texlive/2013basic...
</span><span class='line'>./runme.sh: tlmgr version says this is TeX Live 2013
</span><span class='line'>./runme.sh: proceeding with tlmgr update.
</span><span class='line'>D:tlmgr:main: ::tldownload_server defined
</span><span class='line'>D:Using shipped /usr/local/texlive/2013basic/tlpkg/installer/wget/wget.x86_64-darwin <span class="k">for </span>wget <span class="o">(</span>tested<span class="o">)</span>.
</span><span class='line'>D:Using shipped /usr/local/texlive/2013basic/tlpkg/installer/xz/xzdec.x86_64-darwin <span class="k">for </span>xzdec <span class="o">(</span>tested<span class="o">)</span>.
</span><span class='line'>D:Using shipped /usr/local/texlive/2013basic/tlpkg/installer/xz/xz.x86_64-darwin <span class="k">for </span>xz <span class="o">(</span>not tested<span class="o">)</span>.
</span><span class='line'>./runme.sh: <span class="k">done</span>.
</span></code></pre></td></tr></table></div></figure>


<p>and you can check the version by <code>tlmgr --version</code></p>

<figure class='code'><figcaption><span>setting default package repository</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo tlmgr option location http://mirror.ctan.org/systems/texlive/tlnet/
</span></code></pre></td></tr></table></div></figure>


<h2>Simple Usage</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pandoc test1.md -s -o test1.pdf
</span></code></pre></td></tr></table></div></figure>


<p><strong>TO be continued</strong></p>

<h2>Reference</h2>

<ul>
<li>https://github.com/mwhite/resume</li>
<li>http://tug.ctan.org/</li>
<li>http://www.ctan.org/tex-archive/fonts/tex-gyre/</li>
<li>http://www.ctan.org/tex-archive/macros/latex/contrib/titlesec</li>
<li>http://tex.stackexchange.com/questions/10706/pdftex-error-font-expansion-auto-expansion-is-only-possible-with-scalable</li>
<li>http://www.tug.org/mactex/morepackages.html</li>
<li>http://www.tug.org/texlive/</li>
<li>http://cmwelsh.com/beautiful-resumes-with-markdown-and-latex</li>
<li>http://sysadvent.blogspot.jp/2011/12/day-14-write-your-resume-in-markdown.html</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Plugin/MixIn/Monkey-patching]]></title>
    <link href="http://tclh123.github.com/blog/2013/08/26/python-plugin-slash-mixin-slash-monkey-patching/"/>
    <updated>2013-08-26T15:50:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/08/26/python-plugin-slash-mixin-slash-monkey-patching</id>
    <content type="html"><![CDATA[<p><em>自从到豆瓣实习后，基本就博客就没更了，在github上的活动也都转到了code上&#8230;</em></p>

<h2>Reference</h2>

<ul>
<li><a href="http://markmail.org/message/y2znkmysqjlofswb#query:+page:1+mid:b52kpikcanonjva6+state:results">CPyUG</a></li>
<li><a href="http://abloz.com/2012/03/31/python-plug-ins-mixin-and-monkey-patching.html">python插件方式mixin和monkey-patching</a></li>
<li><a href="http://scg.unibe.ch/archive/papers/Duca06bTOPLASTraits.pdf">Traits: A Mechanism for Fine-grained Reuse</a></li>
<li><a href="http://guangboo.org/2013/01/28/python-mixin-programming">Python Mixin编程机制</a></li>
<li><a href="http://www.linuxjournal.com/node/4540/print">Using Mix-ins with Python</a></li>
<li><a href="http://stackoverflow.com/questions/533631/what-is-a-mixin-and-why-are-they-useful">stackoverflow - What is a mixin, and why are they useful?</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[折腾Chrome Secure Shell]]></title>
    <link href="http://tclh123.github.com/blog/2013/07/10/zhe-teng-chrome-secure-shell/"/>
    <updated>2013-07-10T01:23:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/07/10/zhe-teng-chrome-secure-shell</id>
    <content type="html"><![CDATA[<blockquote><p>最近的觉悟是自己写代码太慢，对IDE的依赖是累积的，各种恶性循环（不足够了解语言，不熟悉项目结构）。半天憋不出几行代码，这种状态让人厌恶&#8230;以前对此持观望态度，各种纵容自己，现在发现这已经成为自己的一大瓶颈&#8230;</p></blockquote>

<p>这东西上次hack day的时候看<a href="https://github.com/atupal">
atupal</a>用过，印象蛮深。今天挖出来玩玩。</p>

<p>去<a href="https://chrome.google.com/webstore/detail/secure-shell/pnhechapfaindjhompbnflcldabbghjo?utm_source=chrome-ntp-icon">商店</a>安装的时候，提示<code>This application is not supported on this computer. Installation has been disabled.</code>，安装按钮直接变灰了。Google无果，看了下自己的Chrome版本，22&#8230;（mbp买来到现在没更过的节奏&#8230;），然后用&#8221;关于&#8221;里的自动更新报Error 12（以前也是这样所以一直没更吧..）。</p>

<h2>OS X下更新Chrome遇到Error 12</h2>

<p>试了<a href="https://support.google.com/chrome/answer/1367288?hl=en">官方</a>提供的方法，木有用。。Google出来的也大致都是删掉SoftwareUpdate然后再装一遍的意思，以及<a href="http://www.v2ex.com/t/52249">各种偏方</a>，无果。</p>

<p>然后想是不是因为现在版本太低（22->28）的缘故，最后直接把最新的<a href="https://www.google.com/intl/en/chrome/browser/">下来</a>覆盖了。后来发现完全无痛啊，因为现有的东西包括Extensions的localStorage都是放在<code>Application Support/</code>里的么。。</p>

<h2>配置Secure Shell</h2>

<p>然后很舒服地用着最新版，顺利地把Secure Shell装上了。</p>

<p>然后其实也不用什么配置是吧，输个<code>&lt;username&gt;@localhost</code>就好了。。结果报Connection refused。。用iTerm试了下<code>ssh localhost</code>同样是Connection refused（sshd服务没开的节奏&#8230;）</p>

<figure class='code'><figcaption><span>启动sshd服务</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo launchctl load -w /System/Library/LaunchDaemons/ssh.plist <span class="c"># unload是停止服务</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>查看是否启动</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo launchctl list | grep ssh
</span><span class='line'>...
</span><span class='line'>-   0   com.openssh.sshd <span class="c"># 看到这个说明成功启动了</span>
</span></code></pre></td></tr></table></div></figure>


<p>ok，现在已经可以顺利ssh到本地了。</p>

<p>另外，还可以直接授权publickey，这样就不用每次都输密码了（但是还是要输一次id_rsa私钥的密码，后面貌似shell会记住）。</p>

<figure class='code'><figcaption><span>直接把id_rsa.pub写入authorized_keys文件就行了</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys
</span></code></pre></td></tr></table></div></figure>


<h2>配置SSH root用户登陆</h2>

<p>用自己的账户登陆是ok了，但是尝试用root登陆时提示<code>Permission denied (publickey,keyboard-interactive)</code>错误。</p>

<p>先是加了/etc/sshd_config里的<code>PermitRootLogin yes</code>（开始把ssh_config跟sshd_config搞错了。。图样）。还是不行。</p>

<p>后来发现是OS X默认没有开启root用户，我输入的密码也只是<code>a valid sudoer password</code>，根本不是root的密码。</p>

<figure class='code'><figcaption><span>设置root的密码</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo passwd
</span></code></pre></td></tr></table></div></figure>


<p>之后就可以用root账户登陆了。</p>

<h2>其他</h2>

<p>Chrome Secure Shell 用起来很方便也很爽。但是我发现<code>ls</code>的时候中文目录名会乱码，中文文件内容可以正常显示。</p>

<p>还有就是不能输入中文（输入法无效。。）。</p>

<p><a href="http://git.chromium.org/gitweb/?p=chromiumos/platform/assets.git;a=tree;f=chromeapps/hterm">http://git.chromium.org/gitweb/?p=chromiumos/platform/assets.git;a=tree;f=chromeapps/hterm</a>，这个据说是前端的源码，可以拿来研究下（<a href="https://github.com/tclh123/kido">kido</a>参考）。但是clone了半天搞不下来。。= =（噗。。现在看了一下貌似死在3%了..）</p>

<h2>Reference</h2>

<ul>
<li>https://discussions.apple.com/thread/1141223?start=0&amp;tstart=0</li>
<li>http://blog.smitec.net/posts/setting-up-a-git-server-on-osx/</li>
<li>http://superuser.com/questions/555810/how-do-i-ssh-login-into-my-mac-as-root</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ImportError using Flask]]></title>
    <link href="http://tclh123.github.com/blog/2013/07/07/importerror-using-flask/"/>
    <updated>2013-07-07T15:38:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/07/07/importerror-using-flask</id>
    <content type="html"><![CDATA[<p>巨二。</p>

<p>以后别把包名取做site，import的时候会跟python标准库里的site.py冲突。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[prevent 'Adobe Reader Updater Helper' automatic run with system on OS X]]></title>
    <link href="http://tclh123.github.com/blog/2013/07/06/os-x-jin-zhi-adobekai-ji-zi-dong-jian-cha-geng-xin/"/>
    <updated>2013-07-06T03:19:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/07/06/os-x-jin-zhi-adobekai-ji-zi-dong-jian-cha-geng-xin</id>
    <content type="html"><![CDATA[<p>今天开机的时候发现Adobe Reader检查更新的进程自启动而且高CPU占用，不一会儿就弹出个更新提示窗口。</p>

<p>不爽之。</p>

<p>遂在 ~/Library/LaunchAgents 目录下发现 <code>com.adobe.ARM.202f4087f2bbde52e3ac2df389f53a4f123223c9cc56a8fd83a6f7ae.plist</code> 文件一枚，改后缀。。</p>

<p>文件内容是下面这样的。。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
</span><span class='line'>&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;
</span><span class='line'>&lt;plist version="1.0"&gt;
</span><span class='line'>&lt;dict&gt;
</span><span class='line'>    &lt;key&gt;Label&lt;/key&gt;
</span><span class='line'>    &lt;string&gt;com.adobe.ARM.202f4087f2bbde52e3ac2df389f53a4f123223c9cc56a8fd83a6f7ae&lt;/string&gt;
</span><span class='line'>    &lt;key&gt;ProgramArguments&lt;/key&gt;
</span><span class='line'>    &lt;array&gt;
</span><span class='line'>        &lt;string&gt;/Applications/Adobe Reader.app/Contents/MacOS/Updater/Adobe Reader Updater Helper.app/Contents/MacOS/Adobe Reader Updater Helper&lt;/string&gt;
</span><span class='line'>        &lt;string&gt;semi-auto&lt;/string&gt;
</span><span class='line'>    &lt;/array&gt;
</span><span class='line'>    &lt;key&gt;RunAtLoad&lt;/key&gt;
</span><span class='line'>    &lt;true/&gt;
</span><span class='line'>    &lt;key&gt;StartInterval&lt;/key&gt;
</span><span class='line'>    &lt;integer&gt;12600&lt;/integer&gt;
</span><span class='line'>&lt;/dict&gt;
</span><span class='line'>&lt;/plist&gt;</span></code></pre></td></tr></table></div></figure>


<p>在Adobe Reader程序<a href="http://helpx.adobe.com/acrobat/kb/disable-automatic-updates-acrobat-reader.html">首选项里改</a>，也许也可以不弹出更新提示，但是不知道是否依然会有自启动的进程。</p>

<p>反正两边都弄了应该没事了~&#8230;.</p>

<h2>Update</h2>

<p>总结几个OS X潜在的自启动的地方。</p>

<ul>
<li>/Library/LaunchDaemons/</li>
<li>/Library/LaunchAgents/</li>
<li>~/Library/LaunchAgents/</li>
<li>/System/Library/StartupItems</li>
<li>/Library/StartupItems</li>
<li>GUI 的 Login Items（系统偏好，用户群组，登陆项），<em>找不到对应的文件？</em></li>
</ul>


<p>另外这两个是系统级的，</p>

<ul>
<li>/System/Library/LaunchDaemons/</li>
<li>/System/Library/LaunchAgents/</li>
</ul>


<p>Ps. 加载顺序应该是 Daemons->Agents->StartupItems（在/System/Library/LaunchDaemons/里可以找到com.apple.SystemStarter.plist，由com.apple.SystemStarter进程负责加载StartupItems）。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About Css Preprocessor]]></title>
    <link href="http://tclh123.github.com/blog/2013/07/05/about-css-preprocessor/"/>
    <updated>2013-07-05T23:58:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/07/05/about-css-preprocessor</id>
    <content type="html"><![CDATA[<p>在Bootstrap那里看过less，在Octopress那里看过sass。还几次搞混了。了解一下。</p>

<h2>Reference</h2>

<ul>
<li><a href="http://www.ruanyifeng.com/blog/2012/06/sass.html">SASS用法指南</a></li>
<li><a href="http://www.qianduan.net/an-introduction-to-less-and-comparison-to-sass.html">LESS介绍及其与Sass的差异</a></li>
<li><a href="http://www.bootcss.com/lesscss.html">LESS - 一种 动态 样式 语言.</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
