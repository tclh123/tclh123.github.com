<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Chrome | Tclh123's 3rd Blog]]></title>
  <link href="http://tclh123.github.com/blog/categories/chrome/atom.xml" rel="self"/>
  <link href="http://tclh123.github.com/"/>
  <updated>2013-12-30T13:05:24+08:00</updated>
  <id>http://tclh123.github.com/</id>
  <author>
    <name><![CDATA[tclh123]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Chrome Extension manifest V2]]></title>
    <link href="http://tclh123.github.com/blog/2013/06/18/chrome-extension-manifest-v2/"/>
    <updated>2013-06-18T01:28:00+08:00</updated>
    <id>http://tclh123.github.com/blog/2013/06/18/chrome-extension-manifest-v2</id>
    <content type="html"><![CDATA[<p>今天兴起想写个 Chrome Extension，研究了一番，稍有点头绪。
想到天天用的 Fawave，去找了下它<a href="http://code.google.com/p/falang/source/checkout">源码</a>（原项目名叫falang...好名字！）。</p>

<p>不看不知道，一看发现它逻辑这么复杂。。而且光看popup.html我就头大了。。
那个神一样模版语言（<code>&lt;?js ... ?&gt;...#{...}...</code>）。。见都没见过。</p>

<p>搞半天弄清楚他用的是<a href="http://www.kuwata-lab.com/tenjin/jstenjin-users-guide.html">shotenjin.js</a>，是tenjin.js的子集，用于client-side。略小众啊，都搜不到什么相关信息。不过超轻量，整个就100多行代码，用法也真心简单。</p>

<p>又看了半天源码，似乎摸清楚几个困惑的点，</p>

<ul>
<li>chrome extension 的 popup.html 不支持持久化，每次点一下相当于要重新载入</li>
<li>像我这种比较小的需求，应该就是每次载入都从localStorage里拿数据出来更新DOM</li>
<li>fawave那些timeline用localStorage肯定放不下的，貌似是利用 background.html 来做本地缓存（cache。写得好像很吊，就看了一点）。</li>
</ul>


<p>总结一下，其实上面几个点就是纠结 popup.html 里的数据的持久化。</p>

<p>墨迹完了~~</p>

<h2>真正跟标题相关的内容</h2>

<p>fawave用的是manifest V1，我用的V2。于是我用shotenjin.js来解析模版就出现了问题。</p>

<p><code>
Uncaught Error: Code generation from strings disallowed for this context
</code></p>

<p>经过一番搜索。。。发现是V2不再支持eval()，而shotenjin.js里必须用了eval()啊。。。</p>

<p>具体解决方法参照，</p>

<p><a href="http://www.360marks.com/?p=375">Chrome extension 升级到 manifest version 2 的问题</a></p>

<p><a href="http://developer.chrome.com/trunk/extensions/sandboxingEval.html">Using eval in Chrome Extensions. Safely.</a></p>

<p>因为不想换模版引擎，我用的是官方给的方法，用一个sandbox 的iframe，来代替进行eval()。。</p>

<p>但是。。仍然有问题（好吧这个问题证明是我是小白），简单说就是我想在popup.html load的时候就进行模版渲染，但是那个时候iframe里的script还没执行，message事件还没注册。。</p>

<p>解决方法是，</p>

<p>```
$('sandbox').onload = function() {</p>

<pre><code>init();
</code></pre>

<p>}
```</p>

<p>这样保证 init（给iframe发消息让它渲染模版）时， iframe 已经 load，就行了。</p>
]]></content>
  </entry>
  
</feed>
